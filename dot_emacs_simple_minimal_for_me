;;;
;;; Reload your ~/.emacs file or restart Emacs
;;; Invoke M-x package-refresh-content
;;;

;;
;; http://tromey.com/elpa/install.html
;; Emacs Lisp Package Archive
;; Run the command M-x package-list-packages.


(setq load-path (append '("~/.emacs.d") load-path))


;;no menu bar
(menu-bar-mode 0)

;;I always run a shell in Emacs. Always always.
(shell)

;; 
(auto-revert-mode 1)

;;'side line number'
(require 'linum)
(global-linum-mode)

(setq line-number-mode t) 
(setq column-number-mode t)

;;highlight line number
;;(hl-line-mode 1)
(global-hl-line-mode 1)
(set-face-background 'hl-line "#CCCCCC")  ;; Emacs 22 Only
;(set-face-background 'hl-line "light yellow") ;; Emacs 22 Only
;(set-face-background 'highlight "#CCCCCC")  ;; Emacs 21 Only
;

;;tab space
;;I like tab space = 2. 
(setq default-tab-width 2)

(setq-default indent-tabs-mode nil)    ; use only spaces and no tabs
(setq default-tab-width 2)

;;
(global-auto-revert-mode 1)

(global-set-key (kbd "M-j") 'windmove-down)
(global-set-key (kbd "M-k") 'windmove-up)
(global-set-key (kbd "M-h") 'windmove-left)
(global-set-key (kbd "M-l") 'windmove-right)   

;;
(setq tramp-default-method "ssh")
(require 'tramp)

;;;Clearing Shell Mode Output
;;http://www.emacswiki.org/emacs/ShellMode#toc11
(defun clear-shell ()
   (interactive)
   (let ((old-max comint-buffer-maximum-size))
     (setq comint-buffer-maximum-size 0)
     (comint-truncate-buffer)
     (setq comint-buffer-maximum-size old-max))) 


(require 'tramp)
(setq tramp-default-method "ssh")

;; http://stackoverflow.com/questions/251908/how-can-i-insert-current-date-and-time-into-a-file-using-emacs
;;

;; 
(defvar current-date-time-format "%a %b %d %H:%M:%S %Z %Y"
  "Format of date to insert with `insert-current-date-time' func
See help of `format-time-string' for possible replacements")

;; insert current date time into bufffer/file
(defun insert-current-date-time ()
  "insert the current date and time into current buffer.
Uses `current-date-time-format' for the formatting the date/time."
       (interactive)
       (insert "\n(")
;       (insert (let () (comment-start)))
       (insert (format-time-string current-date-time-format (current-time)))
       (insert ")\n")
       )


